{"version":3,"sources":["contexts.js","utils.js","WebAPI.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","Components/Header/Header.js","pages/BlogPost/BlogPost.js","pages/AddBlogPage/AddBlogPage.js","pages/AboutPage/AboutPage.js","pages/RegisterPage/RegisterPage.js","pages/ArticlesPage/ArticlesPage.js","Components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","getAuthToken","localStorage","getItem","setAuthToken","token","setItem","BASE_URL","getPosts","fetch","then","res","json","getMe","headers","Root","styled","div","PostContainer","PostTitle","Link","PostDate","PostBody","Banner","props","img","Post","post","to","id","title","Date","createdAt","toLocaleString","body","HomePage","useState","posts","setPosts","useEffect","process","map","ErrorMessage","Form","form","InfoInput","input","SubmitButton","button","Wrapper","Title","h2","LoginPage","setUser","useContext","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","method","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","target","type","HeaderContainer","Brand","NavbarList","Nav","$active","LeftContainer","Header","location","useLocation","user","pathname","as","onClick","BlogTitle","BlogBody","Blog","blog","BlogPost","useParams","setBlog","getSinglePosts","catch","err","console","log","textarea","Button","AddBlogPage","setTitle","setBody","addPost","code","rows","Profile","Content","AboutPage","nickname","setNickname","register","offset","setOffset","perPage","pageCount","setPageCount","Math","ceil","length","postsBeingSliced","slice","className","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","App","Provider","exact","path","ReactDOM","render","theme","colors","red_300","red_400","red_500","document","getElementById"],"mappings":"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","file":"static/js/main.117c3caf.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\nexport const AuthContext = createContext(null)","const TOKEN_NAME = \"token\"\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME)\n}\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token)\n}","import { getAuthToken } from \"./utils\"\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\"\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) => res.json())\n}\n\nexport const getSinglePosts = (id) => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&id=${id}`).then((res) => res.json())\n}\n\nexport const login = (username, password) => {\n  return (\n    fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n    .then(res => res.json())\n  )\n}\n\nexport const register = (nickname, username, password) => {\n  return (\n    fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password\n    })\n  })\n  .then(res => res.json())\n  )\n}\n\nexport const getMe = () => {\n  const token = getAuthToken()\n  return (\n    fetch(`${BASE_URL}/me`, {\n      headers: {\n        'authorization': `Bearer ${token}` \n      }\n    })\n    .then(res => res.json())\n  )\n}\n\nexport const addPost = (title, body) => {\n  const token = getAuthToken()\n  return (\n    fetch(`${BASE_URL}/posts`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        title,\n        body\n      })\n    })\n    .then(res => res.json())\n  )\n}","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../WebAPI\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\n\nconst Root = styled.div`\n  background: #eeeeee;\n  display: flex;\n  flex-direction: column;\n`\n\nconst PostContainer = styled.div`\n  margin: 30px auto 0 auto;\n  border-bottom: 1px solid skyblue;\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  width: 800px;\n  flex-direction: column;\n  align-items: self-start;\n  background: rgb(255,255,255, 0.5);\n\n  &:nth-child(6) {\n    margin-bottom: 100px;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 500px;\n  }\n`\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #666;\n  text-decoration: none;\n  min-width: 500px;\n`\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  min-width: 200px;\n  margin-top: 10px;\n`\n\nconst PostBody = styled.div`\n  font-size: 24px;\n  color: #666;\n  margin-top: 20px;\n  min-width: 500px;\n  max-height: 100px;\n  overflow: hidden; \n  text-overflow: ellipsis;\n`\n\nconst Banner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 300px;\n  background-image: url(${props => props.img});\n  background-size: 100%;\n  background: center cover;\n  background-repeat: no-repeat;\n  color: white;\n  border-radius: 5px;\n  font-size: 50px;\n`\n\nfunction Post({ post }) {\n  return (\n      <PostContainer>\n        <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n        <PostBody>{post.body}</PostBody>\n      </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n}\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    getPosts().then(posts => setPosts(\n      [\n        posts[0],\n        posts[1],\n        posts[2],\n        posts[3],\n        posts[4]\n      ]\n    ))\n  }, [])\n\n  return (\n    <Root>\n      <Banner img={process.env.PUBLIC_URL + '/homepage.jpeg'} >Welcome to my blog</Banner>\n      {posts.map((post) =>\n        <Post key={post.id} post={post}/>\n      )}\n    </Root>\n  )\n}\n","import styled from \"styled-components\";\nimport React, { useState, useContext } from \"react\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory } from \"react-router-dom\"\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin: 10px;\n`\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`\nconst InfoInput = styled.input`\n  margin: 10px;\n  border-radius: 5px;\n  border: lightgrey 1px solid;\n`\n\nconst SubmitButton = styled.button`\n  border: lightgrey solid 1px;\n  background: rgb(255,255,255);\n  padding: 10px;\n  border-radius: 30px;\n  margin: 30px;\n\n  &:hover {\n    background: black;\n    color: white;\n    cursor: pointer;\n  }\n`\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 50px auto;\n  border: lightgrey solid 1px;\n  padding: 20px;\n  box-shadow: 0 0 4px #777;\n  background: rgb(255,255,255, 0.6);\n  max-width: 360px;\n  border-radius: 10px;\n`\nconst Title = styled.h2`\n  text-align: center;\n`\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext) \n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null)\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n\n      setAuthToken(data.token)\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null) // 代表有拿到 token 但 getMe() 的時候，發現 token 錯誤\n          return setErrorMessage(response.toString())\n        }\n        setUser(response.data)\n        history.push(\"/\") // 導回首頁\n      })\n      \n    })\n  }\n  \n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Title>登入</Title>\n        <div>\n          Username: <InfoInput value={username} onChange={(e) => setUsername(e.target.value)} />\n        </div>\n        <div>\n          Password: <InfoInput type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <SubmitButton>Submit</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  )\n}","import styled from \"styled-components\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Link, useLocation, useHistory} from \"react-router-dom\"\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  box-sizing: border-box;\n`\n\nconst Brand = styled.div`\n  font-size: 42px;\n  font-weight: bold;\n\n  @media screen and (max-width: 760px) {\n    font-size: 24px;\n  }\n`\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 760px) {\n    font-size: 24px;\n  }\n`\n\nconst Nav = styled(Link)`\n  display: flex;\n  heigth: 100%;\n  align-items: center;\n  justify-content: center;\n  height: 64px;\n  border-box: box-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) => \n    props.$active &&\n    `\n      background: rgba(0, 0, 0, 0.2)\n    `  \n  }\n`\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const { user, setUser } = useContext(AuthContext)\n  const history = useHistory()\n\n  const handleLogut = () => {\n    setAuthToken(\"\")\n    setUser(null)\n    if (location.pathname !== \"/\") {\n      history.push(\"/\")\n    }\n  }\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>My Blog</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"} as={Link}>首頁</Nav>\n          <Nav to=\"/articles\" $active={location.pathname === \"/articles\"} as={Link}>文章列表</Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"} as={Link}>關於</Nav>\n          {user && <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\" }>發布文章</Nav>}\n        </NavbarList>\n      </LeftContainer>\n        <NavbarList>\n          {!user && <Nav to=\"/login\" $active={location.pathname === \"/login\"} >登入</Nav>}\n          {!user && <Nav to=\"/register\" $active={location.pathname === \"/register\"} as={Link}>註冊</Nav>}\n          {user && <Nav to=\"/\" onClick={handleLogut}>登出</Nav>}\n        </NavbarList> \n    </HeaderContainer>\n\n  )\n}\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { getSinglePosts } from \"../../WebAPI\"\nimport { useParams } from \"react-router-dom\"\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst BlogTitle = styled.div`\n  border: 1px lightgrey solid;\n  padding: 10px;\n  border-radius: 5px;\n  margin: 10px 0;\n  box-shadow: 0 0 2px #666;\n  background: rgb(255,255,255, 0.6);\n`\n\nconst BlogBody = styled.div`\n  margin-top: 10px;\n  border: 1px lightgrey solid;\n  padding: 10px;\n  border-radius: 5px;\n  min-height: 640px;\n  box-shadow: 0 0 2px #666;\n`\n\nfunction Blog({ blog }) {\n  return (\n    <Root img={process.env.PUBLIC_URL + '/article.jpeg'}>\n      標題：\n      <BlogTitle>{blog.title}</BlogTitle>\n      內容：\n      <BlogBody>{blog.body}</BlogBody>\n    </Root> \n  )\n}\n\nexport default function BlogPost() {\n  const { id } = useParams()\n  const [blog, setBlog] = useState([])\n\n  useEffect(() => {\n    getSinglePosts(id).then((post) => {\n      setBlog(post[0])\n    }).catch((err) => {\n      console.log(err)\n    })\n  }, [id])\n\n  return (\n    <Blog blog={blog} />\n  )\n}\n","import styled from \"styled-components\";\nimport React, { useState, useContext } from \"react\";\nimport { getMe, addPost } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory } from \"react-router-dom\"\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin: 10px;\n`\nconst Root = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst BlogTitle = styled.input`\n  border: 1px lightgrey solid;\n  padding: 10px;\n  border-radius: 5px;\n  margin: 10px 0;\n  box-shadow: 0 0 2px #666;\n`\n\nconst BlogBody = styled.textarea`\n  margin-top: 10px;\n  border: 1px lightgrey solid;\n  padding: 10px;\n  border-radius: 5px;\n  resize: none;\n  box-shadow: 0 0 2px #666;\n`\nconst Button = styled.button`\n  width: 100px;\n  border: 1px lightgrey solid;\n  padding: 5px;\n  border-radius: 10px;\n  background: white;\n  cursor: pointer;\n  box-shadow: 0 0 2px #666;\n  margin: 10px auto 0 auto;\n\n  &:hover {\n    background: black;\n    color: white;\n  }\n`\n\nexport default function AddBlogPage() {\n  const { user, setUser } = useContext(AuthContext) \n  const [title, setTitle] = useState(\"\")\n  const [body, setBody] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    if (!title || !body) {\n      return setErrorMessage(\"Title or Conent are missing\")\n    }\n    getMe().then((res) => {\n      if (res.ok !== 1) {\n        setAuthToken(null)\n        return setErrorMessage(res.toString())\n      }\n    })\n    \n    addPost(title, body).then((data) => {\n      if (data.code === 2) {\n        return setErrorMessage(data.message)\n      }\n      history.push(\"/\")\n    })\n  }\n  \n  return (\n    <Root onSubmit={handleSubmit}>\n      標題：\n      <BlogTitle value={title} onChange={(e) => setTitle(e.target.value)} />\n      內容：\n      <BlogBody rows=\"20\" type=\"password\" value={body} onChange={(e) => setBody(e.target.value)} />\n      <Button>送出</Button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Root> \n  )\n}","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../WebAPI\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\n\nconst Wrapper = styled.div`\n  background-image: url(${props => props.img});\n  background-size: 100%;\n  background: center cover;\n  background-repeat: no-repeat;\n  display: flex;\n  min-height: 600px;\n`\n\nconst Profile = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 50px auto 600px auto;\n  border: lightgrey solid 1px;\n  padding: 20px;\n  max-width: 640px;\n  border-radius: 10px;\n  max-height: 200px;\n  box-shadow: 0 0 4px #777;\n  background: rgb(255,255,255, 0.6);\n`\nconst Title = styled.h2`\n  justify-content: center;\n`\n\nconst Content = styled.div`\n  overflow: hiddern;\n`\n\nexport default function AboutPage() {\n  \n  return (\n    <Wrapper img={process.env.PUBLIC_URL + '/about.jpeg'} >\n      <Profile>\n        <Title>關於</Title>\n        <Content>不知道該打一些什麼好，人生願望是可以和狗狗住在方圓一公里沒有人煙、走十分鐘就到岩場的地方；興趣是走在比較陡的斜坡上面。\n          <p>喜歡聽老歌，最近都在聽伍佰的歌，是說演唱會又延期到明年了，哭哭</p>\n        </Content>\n      </Profile>\n    </Wrapper>\n)}\n","import styled from \"styled-components\";\nimport React, { useState, useContext } from \"react\";\nimport { register, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory } from \"react-router-dom\"\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin: 10px;\n`\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`\nconst InfoInput = styled.input`\n  margin: 10px;\n  border-radius: 5px;\n  border: lightgrey 1px solid;\n`\n\nconst SubmitButton = styled.button`\n  border: lightgrey solid 1px;\n  background: rgb(255,255,255);\n  padding: 10px;\n  border-radius: 30px;\n  margin: 30px;\n\n  &:hover {\n    background: black;\n    color: white;\n    cursor: pointer;\n  }\n`\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 50px auto;\n  border: lightgrey solid 1px;\n  padding: 20px;\n  box-shadow: 0 0 4px #777;\n  background: rgb(255,255,255, 0.6);\n  max-width: 360px;\n  border-radius: 10px;\n`\nconst Title = styled.h2`\n  text-align: center;\n`\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext) \n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null)\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message)\n      }\n\n      setAuthToken(data.token)\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null) // 代表有拿到 token 但 getMe() 的時候，發現 token 錯誤\n          return setErrorMessage(response.toString())\n        }\n        setUser(response.data)\n        history.push(\"/\") // 導回首頁\n      })\n      \n    })\n  }\n  \n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Title>註冊</Title>\n        <div>\n          Nickname: <InfoInput value={nickname} onChange={(e) => setNickname(e.target.value)} />\n        </div>\n        <div>\n          Username: <InfoInput value={username} onChange={(e) => setUsername(e.target.value)} />\n        </div>\n        <div>\n          Password: <InfoInput type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <SubmitButton>Submit</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  )\n}","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../WebAPI\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport ReactPaginate from 'react-paginate'\nimport App from '../../App.css'\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst PostContainer = styled.div`\n  margin-top: 30px;\n  border-bottom: 1px solid skyblue;\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #666;\n  text-decoration: none;\n`\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n}\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([])\n  const [offset, setOffset] = useState(0);\n  const [perPage] = useState(5);\n  const [pageCount, setPageCount] = useState(0)\n\n  useEffect(() => {\n    getPosts().then(posts => {\n      setPageCount(Math.ceil(posts.length / perPage))\n      const postsBeingSliced = posts.slice(offset, offset + perPage)\n      setPosts(postsBeingSliced)\n    })\n  }, [offset])\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage * 5)\n    console.log(offset)\n  }\n\n  return (\n    <Root>\n      <div className=\"App\">\n        {posts.map((post) =>\n          <Post key={post.id} post={post}/>\n        )}\n        <ReactPaginate\n          previousLabel={\"prev\"}\n          nextLabel={\"next\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          subContainerClassName={\"pages pagination\"}\n          activeClassName={\"active\"}/>\n      </div>\n    </Root>\n  )\n}\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch, // 用 switch 的話只有第一個判斷到的會被配對 (輸入 /about/123，/about 和 /about/123，都會被配對到)\n  Route,\n} from \"react-router-dom\"\n\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\"\n\nimport HomePage from \"../../pages/HomePage\"\nimport LoginPage from \"../../pages/LoginPage\"\nimport Header from \"../Header\"\nimport BlogPost from \"../../pages/BlogPost\"\nimport AddBlogPage from \"../../pages/AddBlogPage\"\nimport AboutPage from \"../../pages/AboutPage\";\nimport RegisterPage from \"../../pages/RegisterPage\"\nimport ArticlesPage from \"../../pages/ArticlesPage\"\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div`\n  padding-top: 64px;  \n`\n\nfunction App() {\n  const [user, setUser] = useState(\"\") // user 有東西代表有登入 沒東西代表沒登入，要把這個東西傳下去，才能判斷是否有無登入\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data)\n        }\n      })\n    }\n  })\n\n  return (\n    <AuthContext.Provider value={{user, setUser}} >\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/about\"> \n              <AboutPage />\n            </Route>\n            <Route exact path=\"/articles\"> \n              <ArticlesPage />\n            </Route>\n            <Route exact path=\"/\"> \n              <HomePage />\n            </Route>\n            <Route exact path=\"/login\"> \n              <LoginPage />\n            </Route>\n            <Route exact path=\"/register\"> \n              <RegisterPage />\n            </Route>\n            <Route exact path=\"/new-post\"> \n            {user && <AddBlogPage />}\n            </Route>\n            <Route path=\"/posts/:id\">\n              <BlogPost />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    red_300: \"#220000\",\n    red_400: \"#440000\",\n    red_500: \"#660000\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}